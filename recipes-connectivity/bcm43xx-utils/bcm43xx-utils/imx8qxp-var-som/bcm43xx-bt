#!/bin/sh -e
#
# Activate Bluetooth on Variscite VAR-SOM-MX8X
#

# GPIO pin to enable BT module
BT_EN_GPIO="gpiochip3 10"

# GPIO pin to control routing of UART signals
# to BT module or SOM connector
BT_BUF_GPIO="gpiochip1 29"

# UART device connected to BT module
BT_TTY_DEV=/dev/ttyLP0

# Sterling LWB5 BT firmware
BT_FIRMWARE=/lib/firmware/brcm/BCM4335C0.hcd

# WIFI SDIO ID file
WIFI_SDIO_ID_FILE=/sys/class/net/wlan0/device/device

# Check if WIFI+BT combo module is available
bt_found()
{
	# Check that WIFI HW was initialized succesfully
	for i in $(seq 1 5); do
		if [ -f ${WIFI_SDIO_ID_FILE} ]; then
			return 0
		else
			sleep 1
		fi
	done

	return 1
}

# Enable BT via GPIO(s)
bt_enable()
{
	# Power up BT module
	gpioset ${BT_EN_GPIO}=0
	sleep 1
	gpioset ${BT_EN_GPIO}=1

	# Route UART lines to BT module
    gpioset ${BT_BUF_GPIO}=0
}

# Start BT hardware
bt_start()
{
	# Exit if booting from SD (BT is not available)
	grep -q mmcblk1 /proc/cmdline && exit 0

	# Exit if BT module is not available
	bt_found || exit 0

	# Enable BT hardware
	bt_enable

	# Start BT firmware loading service
	kill -9 $(pidof brcm_patchram_plus) 2>/dev/null || true
	brcm_patchram_plus \
			--patchram ${BT_FIRMWARE} \
			--enable_hci \
			--no2bytes \
			--baudrate 3000000 \
			--scopcm=1,0,0,0,0,0,0,0,0,0 \
			--tosleep 1000 ${BT_TTY_DEV} &
}

# Stop BT hardware
bt_stop()
{
	# Exit if BT interface is not available
	[ -e /sys/class/bluetooth/hci0 ] || exit 0

	# Set BT UART
	bt_set_uart

	# Stop BT interface
	hciconfig hci0 down

	# Stop BT firmware loading service
	kill -9 $(pidof brcm_patchram_plus) 2>/dev/null || true

	# Route UART lines to SOM connector
    gpioset ${BT_BUF_GPIO}=1

	# Power down BT module
  	gpioset ${BT_EN_GPIO}=0
}

###########################
#  Execution starts here  #
###########################
case $1 in

start)
	bt_start
	;;
stop)
	bt_stop
	;;
esac

exit 0

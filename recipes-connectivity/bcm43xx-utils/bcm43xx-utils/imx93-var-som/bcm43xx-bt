#!/bin/sh -e
#
# Activate Bluetooth on Variscite VAR-SOM-MX93
#

# Include common functions
. /etc/wifi/variscite-wireless
. /etc/gpiochip

gpio4=$(get_gpiochip "43830080.gpio")

# GPIO pin to enable BT module
BT_EN_GPIO="${gpio4} 15"

# UART device connected to BT module on VAR-SOM-MX93
BT_TTY_DEV_SOM="/dev/ttyLP4"

# Sterling LWB BT firmware
BT_FIRMWARE_LWB=/lib/firmware/brcm/BCM43430A1.hcd

# Sterling LWB5 BT firmware
BT_FIRMWARE_LWB5=/lib/firmware/brcm/BCM4335C0.hcd

# Sterling LWB5 WIFI SDIO ID
WIFI_5G_SDIO_ID=0x4339

# WIFI SDIO ID file
WIFI_SDIO_ID_FILE=/sys/class/net/wlan0/device/device

# Get the SOM revision
get_somrev() {
    # Get the raw output
    local raw_output=$(i2cget -f -y 0x2 0x52 0x23)

    # Convert the output to decimal
    local decimal_output=$(( $raw_output ))

    # Extract major and minor versions
    local major=$(( ($decimal_output & 0xE0) >> 5 ))
    local minor=$(( $decimal_output & 0x1F ))

    # Adjust the major version as per the specification
    major=$(( $major + 1 ))

    echo "$major.$minor"
}

# Check if wifi is bcm43xx
wifi_is_bcm43xx() {
    local somrev=$(get_somrev)

    if [ "$(echo "$somrev < 2.0" | bc)" -eq 1 ]; then
        return 0
    else
        return 1
    fi
}

# Set BT firmware based on WIFI SDIO ID
bt_set_firmware()
{
	# Check if WIFI SDIO ID matches Sterling LWB5 SDIO ID
	if [ "$(cat ${WIFI_SDIO_ID_FILE})" = "${WIFI_5G_SDIO_ID}" ]; then
		BT_FIRMWARE=${BT_FIRMWARE_LWB5}
	else
		BT_FIRMWARE=${BT_FIRMWARE_LWB}
	fi
}

# Set UART device connected to BT module
bt_set_uart()
{
	BT_TTY_DEV=${BT_TTY_DEV_SOM}
}

# Enable BT via GPIO(s)
bt_enable()
{
	# Power up BT module
	gpioset ${BT_EN_GPIO}=0
	sleep 1
	gpioset ${BT_EN_GPIO}=1
}

# Start BT hardware
bt_start()
{
	# Exit if BT module is not bcm43xx
	wifi_is_bcm43xx || exit 0

	# Exit if BT module is not available
	wifi_sdio_exist ${WIFI_SDIO_ID_FILE} || exit 0

	# Enable BT hardware
	bt_enable

	# Set BT firmware file 
	bt_set_firmware

	# Set BT UART
	bt_set_uart

    	# Start BT firmware loading service
    	kill -9 $(pidof brcm_patchram_plus) 2>/dev/null || true
	brcm_patchram_plus \
			--patchram ${BT_FIRMWARE} \
			--enable_hci \
			--no2bytes \
			--baudrate 3000000 \
			--scopcm=1,0,0,0,0,0,0,0,0,0 \
			--tosleep 1000 ${BT_TTY_DEV} &
}

# Stop BT hardware
bt_stop()
{
	# Exit if BT module is not bcm43xx
	wifi_is_bcm43xx || exit 0

	# Exit if BT interface is not available
	[ -e /sys/class/bluetooth/hci0 ] || exit 0

	# Set BT UART
	bt_set_uart

	# Stop BT interface
	hciconfig hci0 down

	# Stop BT firmware loading service
	kill -9 $(pidof brcm_patchram_plus) 2>/dev/null || true

  	# Power down BT module
	gpioset ${BT_EN_GPIO}=0
}

###########################
#  Execution starts here  #
###########################
case $1 in

start)
	bt_start
	;;
stop)
	bt_stop
	;;
esac

exit 0
